name: CI

on:
    pull_request:
    push:
        branches:
            - master
    workflow_dispatch:

env:
    SPRYKER_TESTING_ENABLED: 1
    APPLICATION_STORE: DE
    POSTGRES_PORT: 5433
    DB_USER: postgres
    DB_NAME: DE_test_zed
    DB_PASSWORD: pwd
    MODULE_DIR: module
    SHOP_DIR: current
    MODULE_NAME: payone
    SPRYKER_DB_ENGINE: mysql
    SPRYKER_DB_HOST: database
    SPRYKER_DB_PORT: 3306
    SPRYKER_DB_DATABASE: DE_test_zed
    SPRYKER_DB_USERNAME: spryker
    SPRYKER_DB_PASSWORD: secret

jobs:
    test_pgsql:
        name: "Test / PostgreSQL"
        runs-on: ubuntu-20.04
        strategy:
            fail-fast: false
            matrix:
                php: [ '7.4', ]
                product: [ 'suite' ]
                composer_preference: ['', '--prefer-lowest']
        services:
            rabbitmq:
                image: rabbitmq
                ports:
                    - 5672:5672
            redis:
                image: redis
                ports:
                    - 6379:6379
            mariadb:
                image: mariadb:10.5
        env:
            PRODUCT_NAME: ${{ matrix.product }}
            APPLICATION_ENV: ci.pgsql
        steps:
            -   uses: actions/checkout@v2

            -   name: Configure sysctl limits
                run: |
                    sudo swapoff -a
                    sudo sysctl -w vm.swappiness=1
                    sudo sysctl -w fs.file-max=262144
                    sudo sysctl -w vm.max_map_count=262144
            -   name: Composer get cache directory
                id: composer-cache
                run: |
                    echo "::set-output name=dir::$(composer config cache-files-dir)"
            -   name: Composer cache
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-composer-
            -   name: Composer validate
                run: composer validate

            -   name: Composer install
                run: |
                    composer --version
                    composer install
            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: ${{ matrix.php }}
                    extensions: mbstring, intl
                    tools: composer:v2

            -   name: 'Run Elasticsearch'
                uses: elastic/elastic-github-actions/elasticsearch@master
                with:
                    stack-version: 7.6.0

            -   name: Run tests
                run: composer test

            -   name: Run PHPStan
                run: composer stan

            -   name: Run CodeStyle checks
                run: composer cs-check
